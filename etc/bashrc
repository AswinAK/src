#!/bin/bash
# -*- sh -*-

spell() { ## FILE.md ## spell check FILE.md ## editor
  aspell -H -c $1
}
newdle() { ## ## update vim bundles ## editor
   cd $HOME/.vim/bundle
   for i in *; do (echo -en "$i\t\t "; cd $i; git pull); done
   cd $Lure
}
sniped() { ## ## edit snippets file ## editor
    vi $HOME/.vim/bundle/vim-snippets/snippets/lua.snippets
}
snips() { ## ## show snippets file ## editor
    cat  $HOME/.vim/bundle/vim-snippets/snippets/lua.snippets
}
load() { ## ## reload environment ## shell
 . $Lure/etc/bashrc
}
init() { ## ## install LURE (need only be run once) ## :init
  cd $Lure
  if [ "$(uname)" == "Darwin" ]; then
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi
  sudo easy_install Pygments
  for f in lua luajit vim git aspell graphviz make ctags gawk mc htop ranger asciiquarium cmatrix ; do
    if which $f; then true; else 
     if [ "$(uname)" == "Darwin" ]; then
        brew install $f
     elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        sudo apt-get install $f
     elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
        choco install $f
     elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
        choco install $f
     fi 
   fi
  done
  if  [ ! -d "$HOME/.vim/bundle/Vundle.vim" ]; then
    git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
    vim -u "$Lure/etc/vimrc" -c 'PluginInstall' -c 'qa!'
  fi
  if [ ! -f "$Lure/.gitignore" ]; then
     cat <<EOF > "$Lure/.gitignore"
#vimstuff
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
netrwhist
*~
# sed stuff
*.bak
# doc stuff
docs
locco
# mac stuff
.DS_Store
# testing stuff
_allok.lua
EOF
  fi
  if [ ! -d "$Lure/etc/locco" ]; then
    git clone https://github.com/rgieseke/locco etc/locco
    sed -i'.bak' 's/line-height: 22px;/line-height: 18px;/' $Lure/etc/locco/template.lua
    sed -i'.bak' 's/padding: 10px 25px 1px 50px;/padding: 10px 5px 1px 15px;/' $Lure/etc/locco/template.lua
    sed -i'.bak' 's/font-size: 12px; line-height: 18px;/font-size: 12px; line-height: 15px;/' $Lure/etc/locco/template.lua
  fi
  gitting
  echo "you should run commands like the following..."
  type timm
}
odoc() { ## STEM ## opens a browser on lib/docs/STEM.html ## doc
  open $Lure/lib/docs/$1.html
}
_docheader() { cat<<EOF
 <a href="https://github.com/lualure/src"><img 
style="position: absolute; top: 0; right: 0; border: 0;" 
src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" 
alt="Fork me on GitHub" 
data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>
<img width=150 align=right src="https://goo.gl/QabuWK">
<p>
<a href="index.html">home</a> |
<a href="https://twitter.com/lua_lured">news</a> |
<a href="https://groups.google.com/forum/#!forum/lualure">discuss</a> |
<a href="https://github.com/lualure/src/issues">issues</a> 
</p>
<h1> 
LURE: $1
</h1>
EOF
}
doco() { ## ## generate html from lua code ## doc
   if [ ! -d "$Lure/../info" ]; then
     echo "Missing target repo: [info]"
     echo "I suggest you:"
     echo "   cd $Lure/.."
     echo "   git clone http://github.com/lualure/info"
   else  
     cd $Lure/etc/locco
     files=$(ls ${Lure}/lib/*lua | grep -v 'ok\.lua')
     (echo ""
    # echo "-- <img width=150 align=right src=\"$Img\">"
     echo ""
     echo "-- (Auto-generated. Do not edit.)"
     echo ""
     for i in $files ; do
       f=$(basename $i '.lua')
       l="$(basename $i '.lua').html"
       echo "-- - [${f}]($l) "
     done
     echo ""
     if [ -f $Lure/lib/_index.md ]; then
       cat $Lure/lib/_index.md  | sed 's/^/-- /'
     fi
     echo ""
     ) > $Lure/lib/index.lua
     for i in $Lure/lib/index.lua $files; do
       stem=$(basename $i '.lua')
       if [ "$i" -nt "$Lure/lib/docs/$stem.html" ];then
         ./locco.lua $i
         str=$(_docheader $stem)
         sed -i'.bak'  's/<title>.*/<title>'$stem'<\/title>/1'  $Lure/lib/docs/$stem.html 
         sed -i'.bak'  's?'$Lure/lib/$stem'.lua??1'  $Lure/lib/docs/$stem.html 
         cat $Lure/lib/docs/$stem.html |
         gawk '/<h1>/ {print str; next} /<.h1>/ {next} {print}' str="$str"  > /tmp/$$
         mv /tmp/$$  $Lure/lib/docs/$stem.html
       fi
     done
     rm $Lure/lib/index.lua
     cd $Lure
  fi
}
publish() { ## ## pubish generated html on web ## doc
  cd $Lure/../info/docs
  cp $Lure/lib/docs/* .
  git add *
  make
  cd $Lure
}
vi() { ## FILE ## edit files using the LURE config stuff ## editor
    vim -u "$Lure/etc/vimrc" $*
    echo "Done!"
}
ok() { ## STEM ## shorthand for lua STEMok.lua ## lua
  lure ${1}ok.lua
}
show() { ## FUN ## display definition of FUN ## shell
  type $1
}
oks() { ## ## run all the Xok.lua files ## lua
  ls ${Lure}/lib/*ok.lua | 
  grep -v _allok |
  gawk '{sub(/.lua/,"",$0) 
         sub(/^.*\//,"",$0)
         print " print(); print() " 
         print "local THiss=\""$0"\"" 
         print "local BAr=\"-----------------------------------\"" 
         print " print(BAr .. BAr .. BAr)" 
         print " print(\"-- \" .. THiss) " 
         print " print(BAr .. BAr .. BAr)"  
         print " print(); print(); " 
         print " require \"" $0 "\""}' > ${Lure}/lib/_allok.lua
  cd ${Lure}/lib
  lure _allok.lua
  rm  _allok.lua
  cd $Lure
}
bye() { ## ## push all to on-line repo ## git
  gitting
	git status
	git commit -am "saving"
 git push origin master
}
hi() { ## ## pull updates from on-line repo ## git
  gitting
	git push origin master
}
gitting() {
	git config --global credential.helper cache
	git config credential.helper 'cache --timeout=3600'
	git config --global push.default simple
}
timm() { ## ## Private: sets up this repo for timm ## git
	git config --global user.name "Tim Menzies"
	git config --global user.email tim.menzies@gmail.com
}
legal() { ## ## show copyright notice ## misc
  cat $Lure/LICENSE.md
}
help() { ## ## show help ## misc
  echo "${blue}"
  grep '##' $Lure/etc/bashrc | 
  sort -t\# -k 7  | 
  grep -v 'grep' |
  gawk '  function trim(x) {
            sub(/^[ \t]*/,"",x)
            sub(/[ \t]*$/,"",x)
            return x
          }
           BEGIN  { FS="##" }  
          /BEGIN/ { next    }
          { for(i=1;i<=NF;i++)
               $i=trim($i)
            pad="       "
            gsub(/:/,"",$NF)
            pre=  $NF==last ? pad : "\n" toupper($NF)":\n" pad
            last=$NF 
            gsub(/[(){]/,"",$1)
            opts= NF==4 ? $2 : ""
            text= NF==4 ? $3 : $2
	    if ($3)
	       printf("%s%-8s%-10s%s\n",pre,$1,opts,text)}
              '
  echo -n "${white}"
}
quit() { ## ## exit ## shell
  exit
}
make() { ## [OPTS] ## run any Makefile at the root of this repo ## shell
  root=$(git rev-parse --show-toplevel)
  if [ -n "$root" ]; then
    ( cd $root; _make1 $*)
  else
    /usr/bin/make $*
  fi
}
_make1() {
    if [ -f Makefile ]; then
        echo "My making..."
        /usr/bin/make $*
        return 0
    fi
    echo "nothing to do"
}
_twins1() {
cat <<EOF
-- # $1 : $2


------------------------------------------------------

require "show"
local the=require "config"
	
EOF
}
twins() { ## STEM ## makes STEM.lua and unit test file STEMok.lua ## lua
  f=$(basename $1 ".lua")
  if [ ! -f "$Lure/lib/${f}.lua" ]; then 
	   _twins1 $f utilities  > $Lure/lib/${f}.lua
  fi
  if [ ! -f "$Lure/lib/${f}ok.lua" ]; then
	   _twins1 ${f}ok "unit tests for $f" > $Lure/lib/${f}ok.lua
	   git add $Lure/lib/${f}ok.lua
	   cat <<-EOF >> $Lure/lib/${f}ok.lua
	local o=require "tests"	
	local r=require "random"
	local x=require "$f"
 
	local function _test1()
        	assert(true)
	end

	r.seed(1)
	o.k{_test1}
	EOF
  fi
  git add $Lure/lib/${f}.lua
  git add $Lure/lib/${f}ok.lua
  wc $Lure/lib/${f}.lua $Lure/lib/${f}ok.lua
}
depends() { ## ## show dependancy graph ## lua
  local here=$PWD
  (echo 'digraph G {'
  cd $Lure/lib
  grep require *.lua | 
  gawk '/ok.lua/ {next} /--/ {next} /,/ {next} {print $1,$NF}' | 
  sed -e 's/[:" ]//g' -e 's/require/ /g' -e 's/.lua//' -e 's/local/ /g' |
  gawk '{print "\t" $1 " -> " $2 ";"}' 
  echo '}' ) > $Lure/lib/docs/depends.dot
  cd $here
  dot -o $Lure/lib/docs/depends.jpg -Tjpg $Lure/lib/docs/depends.dot
  open $Lure/lib/docs/depends.jpg
}
norman() { ## ## about Norman Vaughan ## misc
  cat<<-EOF | fmt -60
  
	"Dream big and dare to fail."   
	 -- Norman Vaughan

	Norman Vaughan was born on December 19, 1905, in Salem, Massachusetts,
	as the son of a wealthy leather tanner and shoe manufacturer.

	In his youth, he became fascinated by tales of early-century polar
	explorers. He dropped out of Harvard in 1928 when he heard that
	Admiral Richard E. Byrd was organizing an expedition to Antarctica.
	Admiral Byrd accepted him on the 1928â€“1930 expedition, eventually
	naming a mountain on the continent in his honor. 
	In 1994, at the age of 88, Vaughan participated in an expedition
	to climb the 10,302 ft (3,150 m) Mount Vaughan. 

	In 1932, he competed in the Winter Olympics in Lake Placid, New
	York, in the sprint mushing demonstration sport.

	During World War II, Vaughan was employed by U.S. Army Air Forces
	Search and Rescue as a dogsled driver, attaining the rank of
	colonel and engaging in many rescue missions in Greenland. 

	Norman Vaughan moved to Alaska at the age of 68. Bankrupt and
	divorced, he rebuilt his life, competing in 13 Iditarod races and
	"crashing" the Presidential Inauguration parade in 1977, bringing
	sled dogs to represent his adopted state. In 1981 and 1985, he
	and his Alaskan contingent formally participated in the parade.
	He also had a mountain named after him in the Antarctic.

	He is survived by his fourth wife, the former Carolyn Muegge, who
	has also raced in the Iditarod, and a son and daughter from his
	earlier marriages. On the celebration of his 100th birthday on
	December 18, 2005, surrounded by over 100 friends and family, he
	had champagne, his first drink of liquor in his life, after
	promising his mother he wouldn't drink until he was 100. Several
	days later, he died in the Providence Alaska Medical Center in
	Anchorage at around 10:30 AM on December 23, 2005. His wife and
	some close friends were with him.
	EOF
}
here() { cd $1; basename "$PWD"; }

lure() { ## FILE ## call "luajit FILE" in this environment (.lua optional) ## lua
  f=$(basename $1 .lua).lua
  shift
  if [ -f "$Lure/lib/$f" ]; then
      LUA_PATH="$Lure/lib/?.lua;;" $(which luajit) $Lure/lib/$f "$*"
      return 0
  fi
  echo "not found $f"
}
setup() {
  echo -e "\033]6;1;bg;red;brightness;40\a"
  echo -e "\033]6;1;bg;green;brightness;44\a"
  echo -e "\033]6;1;bg;blue;brightness;52\a"
  alias ls='ls -G'
  export LESS='-R'
  export LESSOPEN='|$Lure/etc/lessfilter %s'
  Tag="LURE"
  Url="https://github.com/lualure/src/blob/master/lib"
  Img="https://goo.gl/QabuWK"
  _c1="\[\033[01;32m\]"
  _c2="\[\033[01;34m\]"
  _c3="\[\033[31m\]"
  _c6="\033[33m"
  _c5="\[\033[35m\]$"
  _c0="\[\033[00m\]"
  _c7="[\033]01;19\]"
  red=$(tput setaf 1)
  blue=$(tput setaf 6)
  ltyl=$(tput setaf 11)
  white=$(tput setaf 15)
}
news1() {
  while true; do
    clear
     curl --silent "$1" | grep -E '(title>|description>)' |  
     sed  -n '4,100p' | 
     sed -e 's/<title>/\
/' -e 's/<\/title>//' -e 's/<description>/ /'  -e 's/<\/description>//' \
     -e 's/\&.*//' -e 's/^[ \\\t]*//'
    sleep 60
  done
}
news() {
    news1 'http://feeds.reuters.com/reuters/topNews'
}

promptcom() {
  PROMPT_COMMAND='echo  -ne "${_c6}${Tag}\033]0;$(here ../..)/$(here ..)/$(here .)\007";PS1="${_c1}(\A) $(here ../..)/$_c2$(here ..)/$_c3$(here .) ${_c6}\!>${_c0}\e[m "'
} 
banner() {
  echo -n "${ltyl}" 
  cat <<'EOF'
                                 _H_     | LURE v1.00
                                /___\    | https://github.com/lualure/info
                                \888/    |
~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~^~U~^~| "Dream big and dare to fail."
                   ~              |      |  -- Norman Vaughan
   ~                        o     |      |
             ___        o         |      | "The charm of fishing is that it is 
    _,.--,.'`   `~'-.._    O      |      |  the pursuit of what is elusive but 
   /_  .-"      _   /_\'.         |   ~  |  attainable, a perpetual series of 
  .-';'       (( `  \0/  `\       #      |  occasions of hope." 
 /__;          ((_  ,_     |      #      |  -- Jack Nicklaus
 .-;                  \_   /  #  _#,     |
/  ;    .-' /  _.--""-.\`~`   `#(('\\    | "There are always new places to 
;-';   /   / .'                  )) \\   |  go fishing. For those who fish,
    ; /.--'.'                   ((   ))  |  there's always a new place, 
     \     |        ~            \\ ((   |  always a new horizon." 
      \    |                      )) `   |  -- John Buchan
~      \   |                      `      |
        \  |                             | "Gone fishin', for a new idea." 
   jgs  .` `""-.                         |  -- Tim Menzies
      .'        \         ~              
      |    |\    |
      \   /  '-._|
       \.'
EOF
echo -n "${white}"
}
##########################################################
# start up actions
setup
promptcom
if [ -f "$HOME/.config/lure/config" ]; then
  . "$HOME/.config/lure/config"
fi
banner
help

